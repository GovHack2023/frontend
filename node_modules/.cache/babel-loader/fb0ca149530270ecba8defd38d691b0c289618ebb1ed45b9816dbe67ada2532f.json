{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nconst formatTime = date => {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate();\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  const seconds = date.getSeconds().toString().padStart(2, \"0\");\n  return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\n};\nconst TimeDisplay = () => {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // 清除定时器\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return formatTime(currentTime);\n};\n_s(TimeDisplay, \"f3elDUct5ap4W3FuLtGG73aMsLc=\");\n_c = TimeDisplay;\nexport default TimeDisplay;\nvar _c;\n$RefreshReg$(_c, \"TimeDisplay\");","map":{"version":3,"names":["React","useState","useEffect","formatTime","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","TimeDisplay","_s","currentTime","setCurrentTime","Date","timer","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["/Users/zxj/Desktop/GovHack/mainCode/frontend/src/utils/setTime.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst formatTime = (date) => {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate();\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  const seconds = date.getSeconds().toString().padStart(2, \"0\");\n\n  return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\n};\n\nconst TimeDisplay = () => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // 清除定时器\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return formatTime(currentTime);\n};\n\nexport default TimeDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAC3B,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAG,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC/D,MAAMC,GAAG,GAAGP,IAAI,CAACQ,OAAO,CAAC,CAAC;EAC1B,MAAMC,KAAK,GAAGT,IAAI,CAACU,QAAQ,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACzD,MAAMK,OAAO,GAAGX,IAAI,CAACY,UAAU,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7D,MAAMO,OAAO,GAAGb,IAAI,CAACc,UAAU,CAAC,CAAC,CAACT,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAE7D,OAAQ,GAAEC,GAAI,IAAGJ,KAAM,IAAGF,IAAK,IAAGQ,KAAM,IAAGE,OAAQ,IAAGE,OAAQ,EAAC;AACjE,CAAC;AAED,MAAME,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAIsB,IAAI,CAAC,CAAC,CAAC;EAE1DrB,SAAS,CAAC,MAAM;IACd,MAAMsB,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BH,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACXG,aAAa,CAACF,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOrB,UAAU,CAACkB,WAAW,CAAC;AAChC,CAAC;AAACD,EAAA,CAfID,WAAW;AAAAQ,EAAA,GAAXR,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}