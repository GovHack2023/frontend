{"ast":null,"code":"var _jsxFileName = \"/Users/zxj/Desktop/GovHack/mainCode/frontend/src/utils/PieChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactECharts from \"echarts-for-react\";\nimport { sendRequest } from \"./requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChartComponent = ({\n  Flag\n}) => {\n  _s();\n  //check what is being clicked\n  let targetGcc = \"sydney\";\n  if (Flag.Melbourne === false && Flag.Sydney === false && Flag.Perth === false && Flag.Brisbane === false) {\n    targetGcc = \"sydney\";\n  } else if (Flag.Melbourne === true && Flag.Sydney === false && Flag.Perth === false && Flag.Brisbane === false) {\n    targetGcc = \"melbourne\";\n  } else if (Flag.Melbourne === false && Flag.Sydney === true && Flag.Perth === false && Flag.Brisbane === false) {\n    targetGcc = \"sydney\";\n  } else if (Flag.Melbourne === false && Flag.Sydney === false && Flag.Perth === true && Flag.Brisbane === false) {\n    targetGcc = \"perth\";\n  } else if (Flag.Melbourne === false && Flag.Sydney === false && Flag.Perth === false && Flag.Brisbane === true) {\n    targetGcc = \"brisbane\";\n  }\n\n  //get the data from the backend\n  const [topicData, setTopicData] = useState([]);\n  useEffect(() => {\n    sendRequest(\"/twitter/topics\", {\n      topic: \"cov\"\n    }).then(res => {\n      setTopicData(res.data.data);\n    });\n  }, []);\n  const rightGccData = topicData[targetGcc];\n\n  //abtract the right data\n  let data;\n  if (typeof rightGccData === \"undefined\") {\n    data = [{\n      name: \"loading\",\n      value: 0\n    }];\n  } else {\n    data = Object.entries(rightGccData).map(([name, value]) => ({\n      name,\n      value\n    }));\n  }\n\n  // Set the chart options\n  const getOption = () => {\n    return {\n      title: {\n        text: \"Sentiment Analysis(cities)\",\n        left: \"center\",\n        textStyle: {\n          color: \"purple\"\n        }\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: \"{b}: {c} ({d}%)\"\n      },\n      legend: {\n        orient: \"vertical\",\n        left: \"left\",\n        data: data.map(item => item.name),\n        textStyle: {\n          color: \"purple\"\n        }\n      },\n      series: [{\n        name: \"Nightingale Chart\",\n        type: \"pie\",\n        radius: [30, 50],\n        center: [\"60%\", \"50%\"],\n        roseType: \"area\",\n        data: data\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: getOption(),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChartComponent, \"W1EfVFyZnrZ5RPORo/ztTuX2eyU=\");\n_c = PieChartComponent;\nexport default PieChartComponent;\nvar _c;\n$RefreshReg$(_c, \"PieChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","ReactECharts","sendRequest","jsxDEV","_jsxDEV","PieChartComponent","Flag","_s","targetGcc","Melbourne","Sydney","Perth","Brisbane","topicData","setTopicData","topic","then","res","data","rightGccData","name","value","Object","entries","map","getOption","title","text","left","textStyle","color","tooltip","trigger","formatter","legend","orient","item","series","type","radius","center","roseType","option","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zxj/Desktop/GovHack/mainCode/frontend/src/utils/PieChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactECharts from \"echarts-for-react\";\nimport { sendRequest } from \"./requests\";\n\nconst PieChartComponent = ({ Flag }) => {\n  //check what is being clicked\n  let targetGcc = \"sydney\";\n  if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === false &&\n    Flag.Perth === false &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"sydney\";\n  } else if (\n    Flag.Melbourne === true &&\n    Flag.Sydney === false &&\n    Flag.Perth === false &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"melbourne\";\n  } else if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === true &&\n    Flag.Perth === false &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"sydney\";\n  } else if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === false &&\n    Flag.Perth === true &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"perth\";\n  } else if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === false &&\n    Flag.Perth === false &&\n    Flag.Brisbane === true\n  ) {\n    targetGcc = \"brisbane\";\n  }\n\n  //get the data from the backend\n  const [topicData, setTopicData] = useState([]);\n  useEffect(() => {\n    sendRequest(\"/twitter/topics\", { topic: \"cov\" }).then((res) => {\n      setTopicData(res.data.data);\n    });\n  }, []);\n\n  const rightGccData = topicData[targetGcc];\n\n  //abtract the right data\n  let data;\n\n  if (typeof rightGccData === \"undefined\") {\n    data = [{ name: \"loading\", value: 0 }];\n  } else {\n    data = Object.entries(rightGccData).map(([name, value]) => ({\n      name,\n      value,\n    }));\n  }\n\n  // Set the chart options\n  const getOption = () => {\n    return {\n      title: {\n        text: \"Sentiment Analysis(cities)\",\n        left: \"center\",\n        textStyle: {\n          color: \"purple\",\n        },\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: \"{b}: {c} ({d}%)\",\n      },\n      legend: {\n        orient: \"vertical\",\n        left: \"left\",\n        data: data.map((item) => item.name),\n        textStyle: {\n          color: \"purple\",\n        },\n      },\n      series: [\n        {\n          name: \"Nightingale Chart\",\n          type: \"pie\",\n          radius: [30, 50],\n          center: [\"60%\", \"50%\"],\n          roseType: \"area\",\n          data: data,\n        },\n      ],\n    };\n  };\n  return (\n    <ReactECharts\n      option={getOption()}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n  );\n};\n\nexport default PieChartComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}