{"ast":null,"code":"var _jsxFileName = \"/Users/zxj/Desktop/GovHack/mainCode/frontend/src/utils/HorizontalBarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactECharts from \"echarts-for-react\";\nimport { sendRequest } from \"./requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorizantalBarChartComponent = ({\n  Flag\n}) => {\n  _s();\n  //determine what is clicked\n  let targetGcc = \"sydney\";\n  if (Flag.Melbourne === false && Flag.Sydney === false && Flag.Perth === false && Flag.Brisbane === false) {\n    targetGcc = \"sydney\";\n  } else if (Flag.Melbourne === true && Flag.Sydney === false && Flag.Perth === false && Flag.Brisbane === false) {\n    targetGcc = \"melbourne\";\n  } else if (Flag.Melbourne === false && Flag.Sydney === true && Flag.Perth === false && Flag.Brisbane === false) {\n    targetGcc = \"sydney\";\n  } else if (Flag.Melbourne === false && Flag.Sydney === false && Flag.Perth === true && Flag.Brisbane === false) {\n    targetGcc = \"perth\";\n  } else if (Flag.Melbourne === false && Flag.Sydney === false && Flag.Perth === false && Flag.Brisbane === true) {\n    targetGcc = \"brisbane\";\n  }\n\n  //get the data from the backend\n  const [benefitData, setBenefitData] = useState([]);\n  useEffect(() => {\n    sendRequest(\"/sa4/family\").then(res => {\n      setBenefitData(res.data.data);\n    });\n  }, []);\n  const rightGccData = benefitData[targetGcc];\n\n  //abtract the right data\n  let data;\n  if (typeof rightGccData === \"undefined\") {\n    data = [{\n      name: \"loading\",\n      value: 0\n    }];\n  } else {\n    data = Object.entries(rightGccData).map(([name, value]) => ({\n      name,\n      value\n    }));\n  }\n  const getOption = () => {\n    return {\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"line\"\n        }\n      },\n      title: {\n        text: \"Benefit Recipients Count(cities)\",\n        left: \"center\",\n        textStyle: {\n          color: \"purple\"\n        }\n      },\n      legend: {},\n      grid: {\n        left: \"5%\",\n        right: \"5%\",\n        bottom: \"5%\",\n        containLabel: true\n      },\n      xAxis: {\n        type: \"value\"\n      },\n      yAxis: {\n        type: \"category\",\n        data: data.map(item => item.name)\n      },\n      series: [{\n        type: \"bar\",\n        data: data.map(item => item.value.toFixed(2)),\n        color: \"#0099ff\"\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: getOption(),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(HorizantalBarChartComponent, \"Ujq5NVTFSI/SG9Hhw6f9OdCEUEo=\");\n_c = HorizantalBarChartComponent;\nexport default HorizantalBarChartComponent;\nvar _c;\n$RefreshReg$(_c, \"HorizantalBarChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","ReactECharts","sendRequest","jsxDEV","_jsxDEV","HorizantalBarChartComponent","Flag","_s","targetGcc","Melbourne","Sydney","Perth","Brisbane","benefitData","setBenefitData","then","res","data","rightGccData","name","value","Object","entries","map","getOption","tooltip","trigger","axisPointer","type","title","text","left","textStyle","color","legend","grid","right","bottom","containLabel","xAxis","yAxis","item","series","toFixed","option","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zxj/Desktop/GovHack/mainCode/frontend/src/utils/HorizontalBarComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactECharts from \"echarts-for-react\";\nimport { sendRequest } from \"./requests\";\nconst HorizantalBarChartComponent = ({ Flag }) => {\n  //determine what is clicked\n  let targetGcc = \"sydney\";\n  if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === false &&\n    Flag.Perth === false &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"sydney\";\n  } else if (\n    Flag.Melbourne === true &&\n    Flag.Sydney === false &&\n    Flag.Perth === false &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"melbourne\";\n  } else if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === true &&\n    Flag.Perth === false &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"sydney\";\n  } else if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === false &&\n    Flag.Perth === true &&\n    Flag.Brisbane === false\n  ) {\n    targetGcc = \"perth\";\n  } else if (\n    Flag.Melbourne === false &&\n    Flag.Sydney === false &&\n    Flag.Perth === false &&\n    Flag.Brisbane === true\n  ) {\n    targetGcc = \"brisbane\";\n  }\n\n  //get the data from the backend\n  const [benefitData, setBenefitData] = useState([]);\n\n  useEffect(() => {\n    sendRequest(\"/sa4/family\").then((res) => {\n      setBenefitData(res.data.data);\n    });\n  }, []);\n\n  const rightGccData = benefitData[targetGcc];\n\n  //abtract the right data\n  let data;\n\n  if (typeof rightGccData === \"undefined\") {\n    data = [{ name: \"loading\", value: 0 }];\n  } else {\n    data = Object.entries(rightGccData).map(([name, value]) => ({\n      name,\n      value,\n    }));\n  }\n\n  const getOption = () => {\n    return {\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"line\",\n        },\n      },\n      title: {\n        text: \"Benefit Recipients Count(cities)\",\n        left: \"center\",\n        textStyle: {\n          color: \"purple\",\n        },\n      },\n      legend: {},\n      grid: {\n        left: \"5%\",\n        right: \"5%\",\n        bottom: \"5%\",\n        containLabel: true,\n      },\n      xAxis: {\n        type: \"value\",\n      },\n      yAxis: {\n        type: \"category\",\n        data: data.map((item) => item.name),\n      },\n      series: [\n        {\n          type: \"bar\",\n          data: data.map((item) => item.value.toFixed(2)),\n          color: \"#0099ff\",\n        },\n      ],\n    };\n  };\n  return (\n    <ReactECharts\n      option={getOption()}\n      style={{ width: \"100%\", height: \"100%\" }}\n    />\n  );\n};\n\nexport default HorizantalBarChartComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}